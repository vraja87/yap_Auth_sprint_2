"""first migration after db creation

Revision ID: e34f0a54e87c
Revises:
Create Date: 2023-11-26 16:15:40.876169

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'e34f0a54e87c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute('CREATE SCHEMA IF NOT EXISTS content')  # added manualy
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name'),
                    schema='content'
                    )
    op.create_index(op.f('ix_content_roles_id'), 'roles', ['id'], unique=False, schema='content')
    op.create_table('users',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('login', sa.String(length=255), nullable=False),
                    sa.Column('password', sa.String(length=255), nullable=False),
                    sa.Column('first_name', sa.String(length=50), nullable=True),
                    sa.Column('last_name', sa.String(length=50), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='content'
                    )
    op.create_index(op.f('ix_content_users_id'), 'users', ['id'], unique=True, schema='content')
    op.create_index(op.f('ix_content_users_login'), 'users', ['login'], unique=True, schema='content')
    op.create_table('login_histories',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=True),
                    sa.Column('ip_address', sa.String(), nullable=True),
                    sa.Column('user_agent', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['content.users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='content'
                    )
    op.create_index(op.f('ix_content_login_histories_id'), 'login_histories', ['id'], unique=False, schema='content')
    op.create_table('unauthorized_refresh_tokens',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=True),
                    sa.Column('jwt_token', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('expiry_date', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['content.users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='content'
                    )
    op.create_index(op.f('ix_content_unauthorized_refresh_tokens_id'), 'unauthorized_refresh_tokens', ['id'],
                    unique=False, schema='content')
    op.create_index(op.f('ix_content_unauthorized_refresh_tokens_jwt_token'), 'unauthorized_refresh_tokens',
                    ['jwt_token'], unique=False, schema='content')
    op.create_table('user_roles',
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('role_id', sa.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['role_id'], ['content.roles.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['content.users.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'role_id'),
                    schema='content'
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_roles', schema='content')
    op.drop_index(op.f('ix_content_unauthorized_refresh_tokens_jwt_token'), table_name='unauthorized_refresh_tokens',
                  schema='content')
    op.drop_index(op.f('ix_content_unauthorized_refresh_tokens_id'), table_name='unauthorized_refresh_tokens',
                  schema='content')
    op.drop_table('unauthorized_refresh_tokens', schema='content')
    op.drop_index(op.f('ix_content_login_histories_id'), table_name='login_histories', schema='content')
    op.drop_table('login_histories', schema='content')
    op.drop_index(op.f('ix_content_users_login'), table_name='users', schema='content')
    op.drop_index(op.f('ix_content_users_id'), table_name='users', schema='content')
    op.drop_table('users', schema='content')
    op.drop_index(op.f('ix_content_roles_id'), table_name='roles', schema='content')
    op.drop_table('roles', schema='content')
    # ### end Alembic commands ###
    op.execute('DROP SCHEMA IF EXISTS content CASCADE')  # added manualy
